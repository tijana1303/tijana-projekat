package org.projekat1.resource;

import java.util.List;

import jakarta.inject.Inject;
import jakarta.ws.rs.Consumes;
import jakarta.ws.rs.GET;
import jakarta.ws.rs.POST;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.QueryParam;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.Response;
import org.projekat1.exception.EventException;
import org.projekat1.model.Event;
import org.projekat1.repository.EventRepository;

@Path("/event/")
public class EventResource {

    @Inject
    private EventRepository eventRepository;

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Path("/addEvent")
    public Response createEvent(Event event) {
        Event e = eventRepository.createEvent(event);
        return Response.ok().entity(e).build();
    }

    @GET
    @Produces(MediaType.APPLICATION_JSON)
    @Path("getAllEvents")
    public Response getAllEvents() {
        List<Event> events = eventRepository.getAllEvents();
        return Response.ok().entity(events).build();
    }

    @GET
    @Produces(MediaType.APPLICATION_JSON)
    @Path("getEventsByName")
    public Response getEventsByName(@QueryParam(value = "name") String name) {
        List<Event> events;
        try {
            events = eventRepository.getEventsByName(name);
        } catch (EventException e) {
            return Response.ok().entity(e.getMessage()).build();
        }
        return Response.ok().entity(events).build();
    }
}
